{"ast":null,"code":"var _jsxFileName = \"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Pages/ShiftsPage.js\",\n    _s = $RefreshSig$();\n\nimport { Button, ButtonGroup, Grid, TextField, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport shiftsUtils from \"../Utils/shiftsUtils\";\nimport ShiftAllocate from \"../Components/ShiftAllocate\";\nimport ShiftComp from \"../Components/Shift\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Store } from \"@mui/icons-material\";\nimport Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  };\n});\n_c = Item;\n\nconst ShiftsPage = () => {\n  _s();\n\n  let token = sessionStorage[\"token\"];\n  const storeData = useSelector(state => state); // const [value, setValue] = React.useState(new Date(\"2022-08-18T21:11:54\"));\n\n  const [addNewShift, setAddNewShift] = useState(false); // const [startDate, setStartDate] = useState(new Date());\n\n  const [startDate, setStartDate] = useState(\"\");\n  const [startHour_new, setStartHour_new] = useState(\"\");\n  const [endingHour_new, setEndingHour_new] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [updateShift, setUpdateShift] = useState(false);\n  const [allocateShift, setAllocateShift] = useState(false); // const handleChange = (newValue) => {\n  //   setValue(newValue);\n  // };\n\n  const convertDate = str => {\n    str = str.toString();\n    let parts = str.split(\" \");\n    let months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    };\n    return parts[2] + \"/\" + months[parts[1]] + \"/\" + parts[3];\n  };\n\n  const add_shift = async () => {\n    let obj = {};\n    let date = convertDate(startDate);\n    obj.Date = date;\n    obj.StartingHour = startHour_new;\n    obj.EndingHour = endingHour_new;\n    await shiftsUtils.add_shift(token, obj);\n    setAdded(!added);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      pb: 2,\n      color: \"primary.second\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" Shifts Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        pb: 1,\n        color: \"primary.second\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \" Add new shift\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"primary.second\",\n          children: \"Choose Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          placeholder: \"26/02/22\",\n          label: \"Date\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: startDate,\n          onChange: e => setStartDate(e.target.value),\n          sx: {\n            mb: 1\n          } // error={LastNameError}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          popperClassName: \"dp\",\n          showDisabledMonthNavigation: true,\n          popperPlacement: \"bottom\",\n          dateFormat: \"dd/MM/yyyy\",\n          selected: startDate,\n          onChange: date => setStartDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Starting Hour\",\n        variant: \"outlined\",\n        fullWidth: true,\n        placeholder: \"08:00\",\n        required: true,\n        onChange: e => setStartHour_new(e.target.value),\n        sx: {\n          my: 1\n        } // error={LastNameError}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Ending Hour\",\n        variant: \"outlined\",\n        fullWidth: true,\n        placeholder: \"17:30\",\n        required: true,\n        onChange: e => setEndingHour_new(e.target.value),\n        sx: {\n          my: 1\n        } // error={LastNameError}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        sx: {\n          mb: 1\n        },\n        variant: \"contained\",\n        onClick: add_shift,\n        children: \"Add shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), added && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Added!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          sx: {\n            mr: 1\n          },\n          variant: \"contained\",\n          onClick: () => setUpdateShift(!updateShift),\n          children: \"Update shift\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          sx: {\n            ml: 1\n          },\n          variant: \"contained\",\n          onClick: () => setAllocateShift(!allocateShift),\n          children: \"Allocate employees to shift\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), allocateShift && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Allocate Shifts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: storeData.db.shifts.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            s: 1,\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              children: /*#__PURE__*/_jsxDEV(ShiftAllocate, {\n                shift: item,\n                employees: storeData.db.employees\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), updateShift && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update Shifts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: storeData.db.shifts.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            s: 1,\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              children: /*#__PURE__*/_jsxDEV(ShiftComp, {\n                shift: item,\n                employees: storeData.db.employees\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this) // <ShiftComp\n          //   key={index}\n          //   shift={item}\n          //   employees={storeData.db.employees}\n          // />\n          ;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShiftsPage, \"v54XVAnkZ56AO29bA6kzCW6B9IQ=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = ShiftsPage;\nexport default ShiftsPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"ShiftsPage\");","map":{"version":3,"sources":["/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Pages/ShiftsPage.js"],"names":["Button","ButtonGroup","Grid","TextField","Typography","React","useEffect","useState","useSelector","shiftsUtils","ShiftAllocate","ShiftComp","DatePicker","Store","Paper","styled","Item","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","ShiftsPage","token","sessionStorage","storeData","state","addNewShift","setAddNewShift","startDate","setStartDate","startHour_new","setStartHour_new","endingHour_new","setEndingHour_new","added","setAdded","updateShift","setUpdateShift","allocateShift","setAllocateShift","convertDate","str","toString","parts","split","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","add_shift","obj","date","Date","StartingHour","EndingHour","e","target","value","mb","my","mr","ml","db","shifts","map","item","index","employees"],"mappings":"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","sourcesContent":["import {\n  Button,\n  ButtonGroup,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport shiftsUtils from \"../Utils/shiftsUtils\";\nimport ShiftAllocate from \"../Components/ShiftAllocate\";\nimport ShiftComp from \"../Components/Shift\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Store } from \"@mui/icons-material\";\nimport Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nconst ShiftsPage = () => {\n  let token = sessionStorage[\"token\"];\n  const storeData = useSelector((state) => state);\n  // const [value, setValue] = React.useState(new Date(\"2022-08-18T21:11:54\"));\n\n  const [addNewShift, setAddNewShift] = useState(false);\n  // const [startDate, setStartDate] = useState(new Date());\n  const [startDate, setStartDate] = useState(\"\");\n  const [startHour_new, setStartHour_new] = useState(\"\");\n  const [endingHour_new, setEndingHour_new] = useState(\"\");\n  const [added, setAdded] = useState(false);\n\n  const [updateShift, setUpdateShift] = useState(false);\n\n  const [allocateShift, setAllocateShift] = useState(false);\n\n  // const handleChange = (newValue) => {\n  //   setValue(newValue);\n  // };\n\n  const convertDate = (str) => {\n    str = str.toString();\n    let parts = str.split(\" \");\n    let months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\",\n    };\n    return parts[2] + \"/\" + months[parts[1]] + \"/\" + parts[3];\n  };\n\n  const add_shift = async () => {\n    let obj = {};\n    let date = convertDate(startDate);\n    obj.Date = date;\n    obj.StartingHour = startHour_new;\n    obj.EndingHour = endingHour_new;\n\n    await shiftsUtils.add_shift(token, obj);\n    setAdded(!added);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\" pb={2} color=\"primary.second\">\n        <b> Shifts Page</b>\n      </Typography>\n      <div>\n        <Typography variant=\"h6\" pb={1} color=\"primary.second\">\n          <b> Add new shift</b>\n        </Typography>{\" \"}\n        <div>\n          <Typography variant=\"body2\" color=\"primary.second\">\n            Choose Date:\n          </Typography>{\" \"}\n          <TextField\n            id=\"outlined-basic\"\n            placeholder=\"26/02/22\"\n            label=\"Date\"\n            variant=\"outlined\"\n            fullWidth\n            value={startDate}\n            onChange={(e) => setStartDate(e.target.value)}\n            sx={{ mb: 1 }}\n            // error={LastNameError}\n          />\n          <DatePicker\n            popperClassName=\"dp\"\n            showDisabledMonthNavigation\n            popperPlacement=\"bottom\"\n            dateFormat=\"dd/MM/yyyy\"\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n          />\n        </div>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Starting Hour\"\n          variant=\"outlined\"\n          fullWidth\n          placeholder=\"08:00\"\n          required\n          onChange={(e) => setStartHour_new(e.target.value)}\n          sx={{ my: 1 }}\n          // error={LastNameError}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Ending Hour\"\n          variant=\"outlined\"\n          fullWidth\n          placeholder=\"17:30\"\n          required\n          onChange={(e) => setEndingHour_new(e.target.value)}\n          sx={{ my: 1 }}\n          // error={LastNameError}\n        />\n        <Button\n          fullWidth\n          sx={{ mb: 1 }}\n          variant=\"contained\"\n          onClick={add_shift}\n        >\n          Add shift\n        </Button>\n        {added && <div>Added!</div>}\n      </div>\n\n      <div>\n        <ButtonGroup fullWidth>\n          <Button\n            fullWidth\n            sx={{ mr: 1 }}\n            variant=\"contained\"\n            onClick={() => setUpdateShift(!updateShift)}\n          >\n            Update shift\n          </Button>\n          <Button\n            fullWidth\n            sx={{ ml: 1 }}\n            variant=\"contained\"\n            onClick={() => setAllocateShift(!allocateShift)}\n          >\n            Allocate employees to shift\n          </Button>\n        </ButtonGroup>\n      </div>\n      {allocateShift && (\n        <div>\n          <h3>Allocate Shifts:</h3>\n          <Grid container spacing={3}>\n            {storeData.db.shifts.map((item, index) => {\n              return (\n                <Grid item xs={12} md={6} s={1} key={index}>\n                  <Item>\n                    <ShiftAllocate\n                      shift={item}\n                      employees={storeData.db.employees}\n                    />\n                  </Item>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </div>\n      )}\n      {updateShift && (\n        <div>\n          <h3>Update Shifts:</h3>\n\n          <Grid container spacing={3}>\n            {storeData.db.shifts.map((item, index) => {\n              return (\n                <Grid item xs={12} md={6} s={1} key={index}>\n                  <Item>\n                    <ShiftComp\n                      shift={item}\n                      employees={storeData.db.employees}\n                    />\n                  </Item>\n                </Grid>\n                // <ShiftComp\n                //   key={index}\n                //   shift={item}\n                //   employees={storeData.db.employees}\n                // />\n              );\n            })}\n          </Grid>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ShiftsPage;\n"]},"metadata":{},"sourceType":"module"}