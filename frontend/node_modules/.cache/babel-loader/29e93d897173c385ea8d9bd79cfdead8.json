{"ast":null,"code":"import axios from \"axios\";\n\nconst get_all_employees = async token => {\n  let resp = await axios.get(\"http://127.0.0.1:5000/employees\", {\n    headers: {\n      \"x-access-token\": token\n    }\n  });\n  return resp.data;\n};\n\nconst get_employee = async (token, employee_FirstName) => {\n  let all_employees = await get_all_employees(token);\n  let employee = all_employees.filter(x => x.FirstName === employee_FirstName);\n  let e_id = employee[0]._id;\n  let resp = await axios.get(\"http://127.0.0.1:5000/employees/\" + e_id, {\n    headers: {\n      \"x-access-token\": token\n    }\n  });\n  return resp.data;\n};\n\nconst add_new_employee = async (token, obj) => {\n  let resp = await axios.post(\"http://127.0.0.1:5000/employees\", obj, {\n    headers: {\n      \"x-access-token\": token\n    }\n  });\n  return resp.data;\n};\n\nconst add_department_to_employee = async (token, e_id, dep_id) => {\n  let resp = await axios.post(\"http://127.0.0.1:5000/employees/department/\" + e_id + \"/\" + dep_id, {}, {\n    headers: {\n      \"x-access-token\": token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return resp.data;\n};\n\nconst add_shift_to_employee = async (token, empId, shiftId) => {\n  let resp = await axios.post(\"http://127.0.0.1:5000/employees/\" + empId + \"/\" + shiftId, {}, {\n    headers: {\n      \"x-access-token\": token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return resp.data;\n};\n\nconst update_employee = async (token, employee_id, obj) => {\n  let resp = await axios.put(\"http://127.0.0.1:5000/employees/\" + employee_id, obj, {\n    headers: {\n      \"x-access-token\": token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return resp.data;\n};\n\nconst delete_employee = async (token, id) => {\n  let resp = await axios.delete(\"http://127.0.0.1:5000/employees/\" + id, {\n    headers: {\n      \"x-access-token\": token\n    }\n  });\n  return resp.data;\n};\n\nexport default {\n  get_all_employees,\n  get_employee,\n  add_new_employee,\n  update_employee,\n  add_shift_to_employee,\n  add_department_to_employee,\n  delete_employee\n};","map":{"version":3,"sources":["/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Utils/employeesUtils.js"],"names":["axios","get_all_employees","token","resp","get","headers","data","get_employee","employee_FirstName","all_employees","employee","filter","x","FirstName","e_id","_id","add_new_employee","obj","post","add_department_to_employee","dep_id","add_shift_to_employee","empId","shiftId","update_employee","employee_id","put","delete_employee","id","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst get_all_employees = async (token) => {\n  let resp = await axios.get(\"http://127.0.0.1:5000/employees\", {\n    headers: { \"x-access-token\": token },\n  });\n  return resp.data;\n};\n\nconst get_employee = async (token, employee_FirstName) => {\n  let all_employees = await get_all_employees(token);\n  let employee = all_employees.filter(\n    (x) => x.FirstName === employee_FirstName\n  );\n  let e_id = employee[0]._id;\n  let resp = await axios.get(\"http://127.0.0.1:5000/employees/\" + e_id, {\n    headers: { \"x-access-token\": token },\n  });\n  return resp.data;\n};\n\nconst add_new_employee = async (token, obj) => {\n  let resp = await axios.post(\"http://127.0.0.1:5000/employees\", obj, {\n    headers: { \"x-access-token\": token },\n  });\n  return resp.data;\n};\n\nconst add_department_to_employee = async (token, e_id, dep_id) => {\n  let resp = await axios.post(\n    \"http://127.0.0.1:5000/employees/department/\" + e_id + \"/\" + dep_id,\n    {},\n    {\n      headers: { \"x-access-token\": token, \"Content-Type\": \"application/json\" },\n    }\n  );\n  return resp.data;\n};\n\nconst add_shift_to_employee = async (token, empId, shiftId) => {\n  let resp = await axios.post(\n    \"http://127.0.0.1:5000/employees/\" + empId + \"/\" + shiftId,\n    {},\n    {\n      headers: {\n        \"x-access-token\": token,\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  return resp.data;\n};\n\nconst update_employee = async (token, employee_id, obj) => {\n  let resp = await axios.put(\n    \"http://127.0.0.1:5000/employees/\" + employee_id,\n    obj,\n    {\n      headers: { \"x-access-token\": token, \"Content-Type\": \"application/json\" },\n    }\n  );\n  return resp.data;\n};\n\nconst delete_employee = async (token, id) => {\n  let resp = await axios.delete(\"http://127.0.0.1:5000/employees/\" + id, {\n    headers: { \"x-access-token\": token },\n  });\n  return resp.data;\n};\n\nexport default {\n  get_all_employees,\n  get_employee,\n  add_new_employee,\n  update_employee,\n  add_shift_to_employee,\n  add_department_to_employee,\n  delete_employee,\n};\n"]},"metadata":{},"sourceType":"module"}