{"ast":null,"code":"var _jsxFileName = \"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Pages/ShiftsPage.js\",\n    _s = $RefreshSig$();\n\nimport { Button, ButtonGroup, TextField, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport shiftsUtils from \"../Utils/shiftsUtils\";\nimport DatePicker from \"react-datepicker\";\nimport ShiftAllocate from \"../Components/ShiftAllocate\";\nimport ShiftComp from \"../Components/Shift\";\nimport DateAdapter from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShiftsPage = () => {\n  _s();\n\n  let token = sessionStorage[\"token\"];\n  const storeData = useSelector(state => state);\n  const [value, setValue] = React.useState(new Date(\"2022-08-18T21:11:54\"));\n  const [addNewShift, setAddNewShift] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [startHour_new, setStartHour_new] = useState(\"\");\n  const [endingHour_new, setEndingHour_new] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [updateShift, setUpdateShift] = useState(false);\n  const [allocateShift, setAllocateShift] = useState(false);\n\n  const handleChange = newValue => {\n    setValue(newValue);\n  }; // useEffect(\n  //   async () => {\n  //     let resp = await axios.get(\"http://127.0.0.1:5000/getAllFactory\");\n  //     let data = resp.data;\n  //     setAllDbData(data);\n  //   },\n  //   [updateShift, addNewShift],\n  //   [allocateShift]\n  // );\n  // const convertDate = (str) => {\n  //   str = str.toString();\n  //   let parts = str.split(\" \");\n  //   let months = {\n  //     Jan: \"01\",\n  //     Feb: \"02\",\n  //     Mar: \"03\",\n  //     Apr: \"04\",\n  //     May: \"05\",\n  //     Jun: \"06\",\n  //     Jul: \"07\",\n  //     Aug: \"08\",\n  //     Sep: \"09\",\n  //     Oct: \"10\",\n  //     Nov: \"11\",\n  //     Dec: \"12\",\n  //   };\n  //   return parts[2] + \"/\" + months[parts[1]] + \"/\" + parts[3];\n  // };\n\n\n  const add_shift = async () => {\n    let obj = {}; // let date = convertDate(startDate);\n    // obj.Date = date;\n\n    obj.StartingHour = startHour_new;\n    obj.EndingHour = endingHour_new;\n    await shiftsUtils.add_shift(token, obj);\n    setAdded(!added);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      pb: 2,\n      color: \"primary.second\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" Shifts Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"contained\",\n        onClick: () => setAddNewShift(!addNewShift),\n        children: \"Add new shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"contained\",\n        onClick: () => setUpdateShift(!updateShift),\n        children: \"Update shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"contained\",\n        onClick: () => setAllocateShift(!allocateShift),\n        children: \"Allocate employees to shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), allocateShift && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Allocate Shifts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), storeData.db.shifts.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(ShiftAllocate, {\n          shift: item,\n          employees: storeData.db.employees\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), updateShift && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update Shifts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), storeData.db.shifts.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(ShiftComp, {\n          shift: item,\n          employees: storeData.db.employees\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShiftsPage, \"Zam7ez2ZQcGzJhK7Ntx9UdB4QkI=\", false, function () {\n  return [useSelector];\n});\n\n_c = ShiftsPage;\nexport default ShiftsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShiftsPage\");","map":{"version":3,"sources":["/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Pages/ShiftsPage.js"],"names":["Button","ButtonGroup","TextField","Typography","React","useEffect","useState","useSelector","shiftsUtils","DatePicker","ShiftAllocate","ShiftComp","DateAdapter","LocalizationProvider","DesktopDatePicker","ShiftsPage","token","sessionStorage","storeData","state","value","setValue","Date","addNewShift","setAddNewShift","startDate","setStartDate","startHour_new","setStartHour_new","endingHour_new","setEndingHour_new","added","setAdded","updateShift","setUpdateShift","allocateShift","setAllocateShift","handleChange","newValue","add_shift","obj","StartingHour","EndingHour","m","db","shifts","map","item","index","employees"],"mappings":"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","sourcesContent":["import { Button, ButtonGroup, TextField, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport shiftsUtils from \"../Utils/shiftsUtils\";\nimport DatePicker from \"react-datepicker\";\nimport ShiftAllocate from \"../Components/ShiftAllocate\";\nimport ShiftComp from \"../Components/Shift\";\nimport DateAdapter from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\n\nconst ShiftsPage = () => {\n  let token = sessionStorage[\"token\"];\n  const storeData = useSelector((state) => state);\n  const [value, setValue] = React.useState(new Date(\"2022-08-18T21:11:54\"));\n\n  const [addNewShift, setAddNewShift] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [startHour_new, setStartHour_new] = useState(\"\");\n  const [endingHour_new, setEndingHour_new] = useState(\"\");\n  const [added, setAdded] = useState(false);\n\n  const [updateShift, setUpdateShift] = useState(false);\n\n  const [allocateShift, setAllocateShift] = useState(false);\n\n  const handleChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  // useEffect(\n  //   async () => {\n  //     let resp = await axios.get(\"http://127.0.0.1:5000/getAllFactory\");\n  //     let data = resp.data;\n  //     setAllDbData(data);\n  //   },\n  //   [updateShift, addNewShift],\n  //   [allocateShift]\n  // );\n  // const convertDate = (str) => {\n  //   str = str.toString();\n  //   let parts = str.split(\" \");\n  //   let months = {\n  //     Jan: \"01\",\n  //     Feb: \"02\",\n  //     Mar: \"03\",\n  //     Apr: \"04\",\n  //     May: \"05\",\n  //     Jun: \"06\",\n  //     Jul: \"07\",\n  //     Aug: \"08\",\n  //     Sep: \"09\",\n  //     Oct: \"10\",\n  //     Nov: \"11\",\n  //     Dec: \"12\",\n  //   };\n  //   return parts[2] + \"/\" + months[parts[1]] + \"/\" + parts[3];\n  // };\n\n  const add_shift = async () => {\n    let obj = {};\n    // let date = convertDate(startDate);\n    // obj.Date = date;\n    obj.StartingHour = startHour_new;\n    obj.EndingHour = endingHour_new;\n\n    await shiftsUtils.add_shift(token, obj);\n    setAdded(!added);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\" pb={2} color=\"primary.second\">\n        <b> Shifts Page</b>\n      </Typography>\n      <ButtonGroup fullWidth>\n        <Button\n          fullWidth\n          sx={{ m: 1 }}\n          variant=\"contained\"\n          onClick={() => setAddNewShift(!addNewShift)}\n        >\n          Add new shift\n        </Button>\n        <Button\n          fullWidth\n          sx={{ m: 1 }}\n          variant=\"contained\"\n          onClick={() => setUpdateShift(!updateShift)}\n        >\n          Update shift\n        </Button>\n        <Button\n          fullWidth\n          sx={{ m: 1 }}\n          variant=\"contained\"\n          onClick={() => setAllocateShift(!allocateShift)}\n        >\n          Allocate employees to shift\n        </Button>\n      </ButtonGroup>\n      {allocateShift && (\n        <div>\n          <h3>Allocate Shifts:</h3>\n          {storeData.db.shifts.map((item, index) => {\n            return (\n              <ShiftAllocate\n                key={index}\n                shift={item}\n                employees={storeData.db.employees}\n              />\n            );\n          })}\n        </div>\n      )}\n      {updateShift && (\n        <div>\n          <h3>Update Shifts:</h3>\n          {storeData.db.shifts.map((item, index) => {\n            return (\n              <ShiftComp\n                key={index}\n                shift={item}\n                employees={storeData.db.employees}\n              />\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ShiftsPage;\n"]},"metadata":{},"sourceType":"module"}