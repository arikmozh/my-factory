{"ast":null,"code":"var _jsxFileName = \"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Pages/ShiftsPage.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport shiftsUtils from \"../Utils/shiftsUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShiftsPage = () => {\n  _s();\n\n  let token = sessionStorage[\"token\"];\n  const storeData = useSelector(state => state);\n  const [addNewShift, setAddNewShift] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [startHour_new, setStartHour_new] = useState(\"\");\n  const [endingHour_new, setEndingHour_new] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [updateShift, setUpdateShift] = useState(false);\n  const [allocateShift, setAllocateShift] = useState(false); // useEffect(\n  //   async () => {\n  //     let resp = await axios.get(\"http://127.0.0.1:5000/getAllFactory\");\n  //     let data = resp.data;\n  //     setAllDbData(data);\n  //   },\n  //   [updateShift, addNewShift],\n  //   [allocateShift]\n  // );\n\n  const convertDate = str => {\n    str = str.toString();\n    let parts = str.split(\" \");\n    let months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    };\n    return parts[2] + \"/\" + months[parts[1]] + \"/\" + parts[3];\n  };\n\n  const add_shift = async () => {\n    let obj = {};\n    let date = convertDate(startDate);\n    obj.Date = date;\n    obj.StartingHour = startHour_new;\n    obj.EndingHour = endingHour_new;\n    await shiftsUtils.add_shift(token, obj);\n    setAdded(!added);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      pb: 2,\n      color: \"primary.second\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" Shifts Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      sx: {\n        my: 3\n      },\n      variant: \"contained\",\n      onClick: () => setAddNewShift(!addNewShift),\n      children: \"Add new shift\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      sx: {\n        my: 3\n      },\n      variant: \"contained\",\n      onClick: () => setUpdateShift(!updateShift),\n      children: \"Update shift\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      sx: {\n        my: 3\n      },\n      variant: \"contained\",\n      onClick: () => setAllocateShift(!allocateShift),\n      children: \"Allocate employees to shift\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShiftsPage, \"r+GgOymvzMZDIDOCW1Npd198rNE=\", false, function () {\n  return [useSelector];\n});\n\n_c = ShiftsPage;\nexport default ShiftsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShiftsPage\");","map":{"version":3,"sources":["/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Pages/ShiftsPage.js"],"names":["Button","Typography","React","useEffect","useState","useSelector","shiftsUtils","ShiftsPage","token","sessionStorage","storeData","state","addNewShift","setAddNewShift","startDate","setStartDate","Date","startHour_new","setStartHour_new","endingHour_new","setEndingHour_new","added","setAdded","updateShift","setUpdateShift","allocateShift","setAllocateShift","convertDate","str","toString","parts","split","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","add_shift","obj","date","StartingHour","EndingHour","my"],"mappings":"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","sourcesContent":["import { Button, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport shiftsUtils from \"../Utils/shiftsUtils\";\n\nconst ShiftsPage = () => {\n  let token = sessionStorage[\"token\"];\n  const storeData = useSelector((state) => state);\n\n  const [addNewShift, setAddNewShift] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [startHour_new, setStartHour_new] = useState(\"\");\n  const [endingHour_new, setEndingHour_new] = useState(\"\");\n  const [added, setAdded] = useState(false);\n\n  const [updateShift, setUpdateShift] = useState(false);\n\n  const [allocateShift, setAllocateShift] = useState(false);\n\n  // useEffect(\n  //   async () => {\n  //     let resp = await axios.get(\"http://127.0.0.1:5000/getAllFactory\");\n  //     let data = resp.data;\n  //     setAllDbData(data);\n  //   },\n  //   [updateShift, addNewShift],\n  //   [allocateShift]\n  // );\n  const convertDate = (str) => {\n    str = str.toString();\n    let parts = str.split(\" \");\n    let months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\",\n    };\n    return parts[2] + \"/\" + months[parts[1]] + \"/\" + parts[3];\n  };\n\n  const add_shift = async () => {\n    let obj = {};\n    let date = convertDate(startDate);\n    obj.Date = date;\n    obj.StartingHour = startHour_new;\n    obj.EndingHour = endingHour_new;\n\n    await shiftsUtils.add_shift(token, obj);\n    setAdded(!added);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\" pb={2} color=\"primary.second\">\n        <b> Shifts Page</b>\n      </Typography>\n      <Button\n        fullWidth\n        sx={{ my: 3 }}\n        variant=\"contained\"\n        onClick={() => setAddNewShift(!addNewShift)}\n      >\n        Add new shift\n      </Button>\n      <Button\n        fullWidth\n        sx={{ my: 3 }}\n        variant=\"contained\"\n        onClick={() => setUpdateShift(!updateShift)}\n      >\n        Update shift\n      </Button>\n      <Button\n        fullWidth\n        sx={{ my: 3 }}\n        variant=\"contained\"\n        onClick={() => setAllocateShift(!allocateShift)}\n      >\n        Allocate employees to shift\n      </Button>\n    </div>\n  );\n};\n\nexport default ShiftsPage;\n"]},"metadata":{},"sourceType":"module"}