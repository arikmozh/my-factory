{"ast":null,"code":"var _jsxFileName = \"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Pages/EditDepartmentPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditDepartmentPage = () => {\n  _s();\n\n  const storeData = useSelector(state => state);\n  let token = sessionStorage[\"token\"];\n  const params = useParams();\n  const [dep, setDep] = useState({});\n  const [emp, setEmp] = useState([]);\n  const [empNotInDep, setEmpNotInDep] = useState([]);\n  useEffect(() => {\n    let all_db_data = storeData.db;\n    let d = all_db_data.departments.filter(x => x.Name == params.dName);\n\n    if (d.length > 0) {\n      setDep(d[0]);\n    }\n\n    let e = all_db_data.employees;\n    setEmp(e);\n    let employeesNotInThisDep = [];\n    let A = e.map(x => x.hasOwnProperty(\"DepartmentId\"));\n\n    for (let i = 0; i < A.length; i++) {\n      if (A[i] == true) {\n        for (let j = 0; j < e[i].DepartmentId.length; j++) {\n          if (e[i].DepartmentId[j].Name != d[0].Name) {\n            employeesNotInThisDep.push(e[i]);\n          }\n        }\n      } else {\n        employeesNotInThisDep.push(e[i]);\n      }\n    }\n\n    setEmpNotInDep(employeesNotInThisDep);\n    console.log(employeesNotInThisDep);\n    console.log(e);\n    console.log(d[0]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"EditDepartmentPage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n\n_s(EditDepartmentPage, \"UgK0xWP6sTfLMYtXjAe4S3OXYVI=\", false, function () {\n  return [useSelector, useParams];\n});\n\n_c = EditDepartmentPage;\nexport default EditDepartmentPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDepartmentPage\");","map":{"version":3,"sources":["/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Pages/EditDepartmentPage.js"],"names":["React","useSelector","useParams","useEffect","useState","EditDepartmentPage","storeData","state","token","sessionStorage","params","dep","setDep","emp","setEmp","empNotInDep","setEmpNotInDep","all_db_data","db","d","departments","filter","x","Name","dName","length","e","employees","employeesNotInThisDep","A","map","hasOwnProperty","i","j","DepartmentId","push","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,SAAS,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAZ,CAA7B;AACA,MAAIC,KAAK,GAAGC,cAAc,CAAC,OAAD,CAA1B;AACA,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,WAAW,GAAGX,SAAS,CAACY,EAA5B;AAEA,QAAIC,CAAC,GAAGF,WAAW,CAACG,WAAZ,CAAwBC,MAAxB,CAAgCC,CAAD,IAAOA,CAAC,CAACC,IAAF,IAAUb,MAAM,CAACc,KAAvD,CAAR;;AACA,QAAIL,CAAC,CAACM,MAAF,GAAW,CAAf,EAAkB;AAChBb,MAAAA,MAAM,CAACO,CAAC,CAAC,CAAD,CAAF,CAAN;AACD;;AAED,QAAIO,CAAC,GAAGT,WAAW,CAACU,SAApB;AACAb,IAAAA,MAAM,CAACY,CAAD,CAAN;AAEA,QAAIE,qBAAqB,GAAG,EAA5B;AAEA,QAAIC,CAAC,GAAGH,CAAC,CAACI,GAAF,CAAOR,CAAD,IAAOA,CAAC,CAACS,cAAF,CAAiB,cAAjB,CAAb,CAAR;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAAC,CAACJ,MAAtB,EAA8BO,CAAC,EAA/B,EAAmC;AACjC,UAAIH,CAAC,CAACG,CAAD,CAAD,IAAQ,IAAZ,EAAkB;AAChB,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,CAAC,CAACM,CAAD,CAAD,CAAKE,YAAL,CAAkBT,MAAtC,EAA8CQ,CAAC,EAA/C,EAAmD;AACjD,cAAIP,CAAC,CAACM,CAAD,CAAD,CAAKE,YAAL,CAAkBD,CAAlB,EAAqBV,IAArB,IAA6BJ,CAAC,CAAC,CAAD,CAAD,CAAKI,IAAtC,EAA4C;AAC1CK,YAAAA,qBAAqB,CAACO,IAAtB,CAA2BT,CAAC,CAACM,CAAD,CAA5B;AACD;AACF;AACF,OAND,MAMO;AACLJ,QAAAA,qBAAqB,CAACO,IAAtB,CAA2BT,CAAC,CAACM,CAAD,CAA5B;AACD;AACF;;AACDhB,IAAAA,cAAc,CAACY,qBAAD,CAAd;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,qBAAZ;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAYX,CAAZ;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYlB,CAAC,CAAC,CAAD,CAAb;AACD,GA9BQ,CAAT;AAgCA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzCD;;GAAMd,kB;UACcJ,W,EAEHC,S;;;KAHXG,kB;AA2CN,eAAeA,kBAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nconst EditDepartmentPage = () => {\n  const storeData = useSelector((state) => state);\n  let token = sessionStorage[\"token\"];\n  const params = useParams();\n  const [dep, setDep] = useState({});\n  const [emp, setEmp] = useState([]);\n  const [empNotInDep, setEmpNotInDep] = useState([]);\n\n  useEffect(() => {\n    let all_db_data = storeData.db;\n\n    let d = all_db_data.departments.filter((x) => x.Name == params.dName);\n    if (d.length > 0) {\n      setDep(d[0]);\n    }\n\n    let e = all_db_data.employees;\n    setEmp(e);\n\n    let employeesNotInThisDep = [];\n\n    let A = e.map((x) => x.hasOwnProperty(\"DepartmentId\"));\n    for (let i = 0; i < A.length; i++) {\n      if (A[i] == true) {\n        for (let j = 0; j < e[i].DepartmentId.length; j++) {\n          if (e[i].DepartmentId[j].Name != d[0].Name) {\n            employeesNotInThisDep.push(e[i]);\n          }\n        }\n      } else {\n        employeesNotInThisDep.push(e[i]);\n      }\n    }\n    setEmpNotInDep(employeesNotInThisDep);\n    console.log(employeesNotInThisDep);\n\n    console.log(e);\n    console.log(d[0]);\n  });\n\n  return <div>EditDepartmentPage</div>;\n};\n\nexport default EditDepartmentPage;\n"]},"metadata":{},"sourceType":"module"}