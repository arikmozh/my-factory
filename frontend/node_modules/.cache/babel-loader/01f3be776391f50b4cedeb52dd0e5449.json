{"ast":null,"code":"var _jsxFileName = \"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Pages/ShiftsPage.js\",\n    _s = $RefreshSig$();\n\nimport { Button, ButtonGroup, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport shiftsUtils from \"../Utils/shiftsUtils\";\nimport DatePicker from \"react-datepicker\";\nimport ShiftAllocate from \"../Components/ShiftAllocate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShiftsPage = () => {\n  _s();\n\n  let token = sessionStorage[\"token\"];\n  const storeData = useSelector(state => state);\n  const [addNewShift, setAddNewShift] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [startHour_new, setStartHour_new] = useState(\"\");\n  const [endingHour_new, setEndingHour_new] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [updateShift, setUpdateShift] = useState(false);\n  const [allocateShift, setAllocateShift] = useState(false); // useEffect(\n  //   async () => {\n  //     let resp = await axios.get(\"http://127.0.0.1:5000/getAllFactory\");\n  //     let data = resp.data;\n  //     setAllDbData(data);\n  //   },\n  //   [updateShift, addNewShift],\n  //   [allocateShift]\n  // );\n\n  const convertDate = str => {\n    str = str.toString();\n    let parts = str.split(\" \");\n    let months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    };\n    return parts[2] + \"/\" + months[parts[1]] + \"/\" + parts[3];\n  };\n\n  const add_shift = async () => {\n    let obj = {};\n    let date = convertDate(startDate);\n    obj.Date = date;\n    obj.StartingHour = startHour_new;\n    obj.EndingHour = endingHour_new;\n    await shiftsUtils.add_shift(token, obj);\n    setAdded(!added);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      pb: 2,\n      color: \"primary.second\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" Shifts Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"contained\",\n        onClick: () => setAddNewShift(!addNewShift),\n        children: \"Add new shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"contained\",\n        onClick: () => setUpdateShift(!updateShift),\n        children: \"Update shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"contained\",\n        onClick: () => setAllocateShift(!allocateShift),\n        children: \"Allocate employees to shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), allocateShift && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Allocate Shifts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), storeData.db.shifts.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(ShiftAllocate, {\n          shift: item,\n          employees: storeData.db.employees\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), updateShift && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update Shifts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), storeData.db.shifts.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(ShiftComp, {\n          shift: item,\n          employees: storeData.db.employees\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), addNewShift && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Shift:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Choose Date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n          popperClassName: \"dp\",\n          showDisabledMonthNavigation: true,\n          popperPlacement: \"bottom\",\n          dateFormat: \"dd/MM/yyyy\",\n          selected: startDate,\n          onChange: date => setStartDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), \"Starting Hour:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"08:00\",\n        onChange: e => setStartHour_new(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), \"Ending Hour:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"18:00\",\n        onChange: e => setEndingHour_new(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add shift\",\n        onClick: add_shift\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), added && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Added!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShiftsPage, \"r+GgOymvzMZDIDOCW1Npd198rNE=\", false, function () {\n  return [useSelector];\n});\n\n_c = ShiftsPage;\nexport default ShiftsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShiftsPage\");","map":{"version":3,"sources":["/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Pages/ShiftsPage.js"],"names":["Button","ButtonGroup","Typography","React","useEffect","useState","useSelector","shiftsUtils","DatePicker","ShiftAllocate","ShiftsPage","token","sessionStorage","storeData","state","addNewShift","setAddNewShift","startDate","setStartDate","Date","startHour_new","setStartHour_new","endingHour_new","setEndingHour_new","added","setAdded","updateShift","setUpdateShift","allocateShift","setAllocateShift","convertDate","str","toString","parts","split","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","add_shift","obj","date","StartingHour","EndingHour","m","db","shifts","map","item","index","employees","e","target","value"],"mappings":"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","sourcesContent":["import { Button, ButtonGroup, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport shiftsUtils from \"../Utils/shiftsUtils\";\nimport DatePicker from \"react-datepicker\";\nimport ShiftAllocate from \"../Components/ShiftAllocate\";\n\nconst ShiftsPage = () => {\n  let token = sessionStorage[\"token\"];\n  const storeData = useSelector((state) => state);\n\n  const [addNewShift, setAddNewShift] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [startHour_new, setStartHour_new] = useState(\"\");\n  const [endingHour_new, setEndingHour_new] = useState(\"\");\n  const [added, setAdded] = useState(false);\n\n  const [updateShift, setUpdateShift] = useState(false);\n\n  const [allocateShift, setAllocateShift] = useState(false);\n\n  // useEffect(\n  //   async () => {\n  //     let resp = await axios.get(\"http://127.0.0.1:5000/getAllFactory\");\n  //     let data = resp.data;\n  //     setAllDbData(data);\n  //   },\n  //   [updateShift, addNewShift],\n  //   [allocateShift]\n  // );\n  const convertDate = (str) => {\n    str = str.toString();\n    let parts = str.split(\" \");\n    let months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\",\n    };\n    return parts[2] + \"/\" + months[parts[1]] + \"/\" + parts[3];\n  };\n\n  const add_shift = async () => {\n    let obj = {};\n    let date = convertDate(startDate);\n    obj.Date = date;\n    obj.StartingHour = startHour_new;\n    obj.EndingHour = endingHour_new;\n\n    await shiftsUtils.add_shift(token, obj);\n    setAdded(!added);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\" pb={2} color=\"primary.second\">\n        <b> Shifts Page</b>\n      </Typography>\n      <ButtonGroup fullWidth>\n        <Button\n          fullWidth\n          sx={{ m: 1 }}\n          variant=\"contained\"\n          onClick={() => setAddNewShift(!addNewShift)}\n        >\n          Add new shift\n        </Button>\n        <Button\n          fullWidth\n          sx={{ m: 1 }}\n          variant=\"contained\"\n          onClick={() => setUpdateShift(!updateShift)}\n        >\n          Update shift\n        </Button>\n        <Button\n          fullWidth\n          sx={{ m: 1 }}\n          variant=\"contained\"\n          onClick={() => setAllocateShift(!allocateShift)}\n        >\n          Allocate employees to shift\n        </Button>\n      </ButtonGroup>\n      {allocateShift && (\n        <div>\n          <h3>Allocate Shifts:</h3>\n          {storeData.db.shifts.map((item, index) => {\n            return (\n              <ShiftAllocate\n                key={index}\n                shift={item}\n                employees={storeData.db.employees}\n              />\n            );\n          })}\n        </div>\n      )}\n      {updateShift && (\n        <div>\n          <h3>Update Shifts:</h3>\n          {storeData.db.shifts.map((item, index) => {\n            return (\n              <ShiftComp\n                key={index}\n                shift={item}\n                employees={storeData.db.employees}\n              />\n            );\n          })}\n        </div>\n      )}\n      {addNewShift && (\n        <div>\n          <h3>Add New Shift:</h3>\n          <div>\n            Choose Date:\n            <DatePicker\n              popperClassName=\"dp\"\n              showDisabledMonthNavigation\n              popperPlacement=\"bottom\"\n              dateFormat=\"dd/MM/yyyy\"\n              selected={startDate}\n              onChange={(date) => setStartDate(date)}\n            />\n          </div>\n          Starting Hour:\n          <input\n            type=\"text\"\n            placeholder=\"08:00\"\n            onChange={(e) => setStartHour_new(e.target.value)}\n          />\n          <br />\n          Ending Hour:\n          <input\n            type=\"text\"\n            placeholder=\"18:00\"\n            onChange={(e) => setEndingHour_new(e.target.value)}\n          />{\" \"}\n          <br />\n          <input type=\"button\" value=\"Add shift\" onClick={add_shift} />\n          {added && <div>Added!</div>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ShiftsPage;\n"]},"metadata":{},"sourceType":"module"}