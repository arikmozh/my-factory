{"ast":null,"code":"var _jsxFileName = \"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Components/ShiftAllocate.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport employeesUtils from \"../Utils/employeesUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShiftAllocate = props => {\n  _s();\n\n  let token = sessionStorage[\"token\"];\n  const [empNotInThisShift, setEmpNotInThisShift] = useState([]);\n  const [selectedEmpToAdd, setSelectedEmpToAdd] = useState(\"\");\n  useEffect(() => {\n    let options = [];\n    let dontHaveShifts = props.employees.filter(x => !x.hasOwnProperty(\"Shifts\")); // console.log(dontHaveShifts);\n\n    dontHaveShifts.forEach(element => {\n      options.push({\n        Name: element.FirstName + \" \" + element.LastName,\n        EmpId: element._id\n      });\n    });\n    let haveShift = props.employees.filter(x => x.hasOwnProperty(\"Shifts\")); // console.log(haveShift);\n\n    let a = haveShift.map(x => x.Shifts.filter(y => y._id == props.shift._id)); // console.log(a);\n\n    a.forEach(element => {\n      if (element.length == 0) {\n        let obj = haveShift[a.indexOf(element)];\n        options.push({\n          Name: obj.FirstName + \" \" + obj.LastName,\n          EmpId: obj._id\n        });\n      }\n    }); // console.log(\"--------OPT----\");\n    // console.log(options);\n\n    setEmpNotInThisShift(options);\n  }, []);\n\n  const handleChange = e => {\n    setSelectedEmpToAdd(e.target.value);\n    console.log(\"Employee Selected!!\");\n  };\n\n  const allocateEmp = async () => {\n    await employeesUtils.add_shift_to_employee(token, selectedEmpToAdd, props.shift._id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Allocate Employees to Shift: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: props.shift._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleChange(e),\n      defaultValue: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        selected: true,\n        disabled: true,\n        hidden: true,\n        children: \"Choose Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), empNotInThisShift.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.EmpId,\n          children: item.Name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      sx: {\n        mb: 1\n      },\n      variant: \"contained\",\n      onClick: allocateEmp,\n      children: \"ALLOCATE EMP TO SHIFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Add Shift\",\n      onClick: allocateEmp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShiftAllocate, \"A7kKwcd0k2++pdZBRqjUN+UJO1U=\");\n\n_c = ShiftAllocate;\nexport default ShiftAllocate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShiftAllocate\");","map":{"version":3,"sources":["/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Components/ShiftAllocate.js"],"names":["Button","useEffect","useState","employeesUtils","ShiftAllocate","props","token","sessionStorage","empNotInThisShift","setEmpNotInThisShift","selectedEmpToAdd","setSelectedEmpToAdd","options","dontHaveShifts","employees","filter","x","hasOwnProperty","forEach","element","push","Name","FirstName","LastName","EmpId","_id","haveShift","a","map","Shifts","y","shift","length","obj","indexOf","handleChange","e","target","value","console","log","allocateEmp","add_shift_to_employee","item","index","mb"],"mappings":"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","sourcesContent":["import { Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport employeesUtils from \"../Utils/employeesUtils\";\n\nconst ShiftAllocate = (props) => {\n  let token = sessionStorage[\"token\"];\n  const [empNotInThisShift, setEmpNotInThisShift] = useState([]);\n  const [selectedEmpToAdd, setSelectedEmpToAdd] = useState(\"\");\n\n  useEffect(() => {\n    let options = [];\n    let dontHaveShifts = props.employees.filter(\n      (x) => !x.hasOwnProperty(\"Shifts\")\n    );\n    // console.log(dontHaveShifts);\n\n    dontHaveShifts.forEach((element) => {\n      options.push({\n        Name: element.FirstName + \" \" + element.LastName,\n        EmpId: element._id,\n      });\n    });\n\n    let haveShift = props.employees.filter((x) => x.hasOwnProperty(\"Shifts\"));\n    // console.log(haveShift);\n\n    let a = haveShift.map((x) =>\n      x.Shifts.filter((y) => y._id == props.shift._id)\n    );\n    // console.log(a);\n\n    a.forEach((element) => {\n      if (element.length == 0) {\n        let obj = haveShift[a.indexOf(element)];\n        options.push({\n          Name: obj.FirstName + \" \" + obj.LastName,\n          EmpId: obj._id,\n        });\n      }\n    });\n    // console.log(\"--------OPT----\");\n    // console.log(options);\n    setEmpNotInThisShift(options);\n  }, []);\n\n  const handleChange = (e) => {\n    setSelectedEmpToAdd(e.target.value);\n    console.log(\"Employee Selected!!\");\n  };\n\n  const allocateEmp = async () => {\n    await employeesUtils.add_shift_to_employee(\n      token,\n      selectedEmpToAdd,\n      props.shift._id\n    );\n  };\n\n  return (\n    <div\n    // style={{\n    //   border: \"solid\",\n    //   width: \"50%\",\n    //   margin: \"10px auto 10px auto \",\n    //   padding: \"10px\",\n    // }}\n    >\n      <h5>\n        Allocate Employees to Shift: <b>{props.shift._id}</b>\n      </h5>\n      <select onChange={(e) => handleChange(e)} defaultValue=\"\">\n        <option value=\"\" selected disabled hidden>\n          Choose Employee\n        </option>\n        {empNotInThisShift.map((item, index) => {\n          return (\n            <option key={index} value={item.EmpId}>\n              {item.Name}\n            </option>\n          );\n        })}\n      </select>\n      <Button\n        fullWidth\n        sx={{ mb: 1 }}\n        variant=\"contained\"\n        onClick={allocateEmp}\n      >\n        ALLOCATE EMP TO SHIFT\n      </Button>\n      <input type=\"button\" value=\"Add Shift\" onClick={allocateEmp} />\n    </div>\n  );\n};\n\nexport default ShiftAllocate;\n"]},"metadata":{},"sourceType":"module"}