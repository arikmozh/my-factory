{"ast":null,"code":"var _jsxFileName = \"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Components/Shift.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport shiftsUtils from \"../Utils/shiftsUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShiftComp = props => {\n  _s();\n\n  let token = sessionStorage[\"token\"];\n  const [date, setDate] = useState(props.shift.Date);\n  const [startH, setStartH] = useState(props.shift.StartingHour);\n  const [endingH, setEndingH] = useState(props.shift.EndingHour);\n\n  const update_shift = async () => {\n    let obj = {};\n    obj.Date = date;\n    obj.StartingHour = startH;\n    obj.EndingHour = endingH;\n    obj._id = props.shift._id;\n    await shiftsUtils.update_shift(token, props.shift._id, obj);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"id:\", props.shift._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 43\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 50\n    }, this), \"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), \"Starting hour:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: startH,\n      onChange: e => setStartH(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \"Ending hour:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: endingH,\n      onChange: e => setEndingH(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      sx: {\n        mb: 1\n      },\n      variant: \"contained\",\n      onClick: update_shift,\n      children: \"UPDATE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShiftComp, \"xR1jJ+ACBiuqZru5bmjgkDZTlys=\");\n\n_c = ShiftComp;\nexport default ShiftComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShiftComp\");","map":{"version":3,"sources":["/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/src/Components/Shift.js"],"names":["Button","useState","shiftsUtils","ShiftComp","props","token","sessionStorage","date","setDate","shift","Date","startH","setStartH","StartingHour","endingH","setEndingH","EndingHour","update_shift","obj","_id","e","target","value","mb"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,MAAIC,KAAK,GAAGC,cAAc,CAAC,OAAD,CAA1B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACG,KAAK,CAACK,KAAN,CAAYC,IAAb,CAAhC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAACG,KAAK,CAACK,KAAN,CAAYI,YAAb,CAApC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAACG,KAAK,CAACK,KAAN,CAAYO,UAAb,CAAtC;;AAEA,QAAMC,YAAY,GAAG,YAAY;AAC/B,QAAIC,GAAG,GAAG,EAAV;AACAA,IAAAA,GAAG,CAACR,IAAJ,GAAWH,IAAX;AACAW,IAAAA,GAAG,CAACL,YAAJ,GAAmBF,MAAnB;AACAO,IAAAA,GAAG,CAACF,UAAJ,GAAiBF,OAAjB;AACAI,IAAAA,GAAG,CAACC,GAAJ,GAAUf,KAAK,CAACK,KAAN,CAAYU,GAAtB;AACA,UAAMjB,WAAW,CAACe,YAAZ,CAAyBZ,KAAzB,EAAgCD,KAAK,CAACK,KAAN,CAAYU,GAA5C,EAAiDD,GAAjD,CAAN;AACD,GAPD;;AASA,sBACE;AAAA,4BACE;AAAA,wBAAWd,KAAK,CAACK,KAAN,CAAYU,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,oBACsC;AAAA;AAAA;AAAA;AAAA,YADtC,oBAC6C;AAAA;AAAA;AAAA;AAAA,YAD7C,wBAGE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEZ,IAFT;AAGE,MAAA,QAAQ,EAAGa,CAAD,IAAOZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,YAHF,EAOK,GAPL,eAQE;AAAA;AAAA;AAAA;AAAA,YARF,iCAUE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEX,MAFT;AAGE,MAAA,QAAQ,EAAGS,CAAD,IAAOR,SAAS,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA,YAVF,EAcK,GAdL,eAeE;AAAA;AAAA;AAAA;AAAA,YAfF,+BAiBE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAER,OAFT;AAGE,MAAA,QAAQ,EAAGM,CAAD,IAAOL,UAAU,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAH7B;AAAA;AAAA;AAAA;AAAA,YAjBF,EAqBK,GArBL,eAsBE;AAAA;AAAA;AAAA;AAAA,YAtBF,oBAsBS;AAAA;AAAA;AAAA;AAAA,YAtBT,eAuBE,QAAC,MAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAFN;AAGE,MAAA,OAAO,EAAC,WAHV;AAIE,MAAA,OAAO,EAAEN,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAjDD;;GAAMd,S;;KAAAA,S;AAmDN,eAAeA,SAAf","sourcesContent":["import { Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport shiftsUtils from \"../Utils/shiftsUtils\";\n\nconst ShiftComp = (props) => {\n  let token = sessionStorage[\"token\"];\n  const [date, setDate] = useState(props.shift.Date);\n  const [startH, setStartH] = useState(props.shift.StartingHour);\n  const [endingH, setEndingH] = useState(props.shift.EndingHour);\n\n  const update_shift = async () => {\n    let obj = {};\n    obj.Date = date;\n    obj.StartingHour = startH;\n    obj.EndingHour = endingH;\n    obj._id = props.shift._id;\n    await shiftsUtils.update_shift(token, props.shift._id, obj);\n  };\n\n  return (\n    <div>\n      <label>id:{props.shift._id}</label> <br /> <br />\n      Date:\n      <input\n        type=\"text\"\n        value={date}\n        onChange={(e) => setDate(e.target.value)}\n      />{\" \"}\n      <br />\n      Starting hour:\n      <input\n        type=\"text\"\n        value={startH}\n        onChange={(e) => setStartH(e.target.value)}\n      />{\" \"}\n      <br />\n      Ending hour:\n      <input\n        type=\"text\"\n        value={endingH}\n        onChange={(e) => setEndingH(e.target.value)}\n      />{\" \"}\n      <br /> <br />\n      <Button\n        fullWidth\n        sx={{ mb: 1 }}\n        variant=\"contained\"\n        onClick={update_shift}\n      >\n        UPDATE\n      </Button>\n    </div>\n  );\n};\n\nexport default ShiftComp;\n"]},"metadata":{},"sourceType":"module"}