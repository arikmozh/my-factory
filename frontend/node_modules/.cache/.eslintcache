[{"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/index.js":"1","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/App.js":"2","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Reducer/reducer.js":"3","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/NewDepartmentPage.js":"4","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/EditEmployeePage.js":"5","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/LoginPage.js":"6","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/EmployeePage.js":"7","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/DepartmentPage.js":"8","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/NewEmployeePage.js":"9","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/MainPage.js":"10","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/EditDepartmentPage.js":"11","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/ShiftsPage.js":"12","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/UsersPage.js":"13","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Utils/authUtils.js":"14","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Utils/employeesUtils.js":"15","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/EmployeeSelect.js":"16","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/EmployeeSelectDep.js":"17","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/DepTable.js":"18","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/Shift.js":"19","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/EditEmployeeSelect.js":"20","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/EmployeeTable.js":"21","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/UsersTable.js":"22","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/EditEmployeeShiftTable.js":"23","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Utils/departmentUtils.js":"24","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/ShiftAllocate.js":"25","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Utils/shiftsUtils.js":"26"},{"size":422,"mtime":1648482177492,"results":"27","hashOfConfig":"28"},{"size":1945,"mtime":1648462068689,"results":"29","hashOfConfig":"28"},{"size":412,"mtime":1648059700414,"results":"30","hashOfConfig":"28"},{"size":2727,"mtime":1648485432284,"results":"31","hashOfConfig":"28"},{"size":5895,"mtime":1648485264010,"results":"32","hashOfConfig":"28"},{"size":3569,"mtime":1648485346351,"results":"33","hashOfConfig":"28"},{"size":1737,"mtime":1648485331103,"results":"34","hashOfConfig":"28"},{"size":2096,"mtime":1648485280152,"results":"35","hashOfConfig":"28"},{"size":3923,"mtime":1648485461073,"results":"36","hashOfConfig":"28"},{"size":4586,"mtime":1648485391703,"results":"37","hashOfConfig":"28"},{"size":4597,"mtime":1648485137765,"results":"38","hashOfConfig":"28"},{"size":5101,"mtime":1648485537995,"results":"39","hashOfConfig":"28"},{"size":466,"mtime":1648485545565,"results":"40","hashOfConfig":"28"},{"size":477,"mtime":1648033793520,"results":"41","hashOfConfig":"28"},{"size":2036,"mtime":1648033793525,"results":"42","hashOfConfig":"28"},{"size":1180,"mtime":1648485800856,"results":"43","hashOfConfig":"28"},{"size":1346,"mtime":1648485857929,"results":"44","hashOfConfig":"28"},{"size":2252,"mtime":1648485673078,"results":"45","hashOfConfig":"28"},{"size":1925,"mtime":1648485895334,"results":"46","hashOfConfig":"28"},{"size":1050,"mtime":1648485810903,"results":"47","hashOfConfig":"28"},{"size":5189,"mtime":1648485875612,"results":"48","hashOfConfig":"28"},{"size":1314,"mtime":1648068053845,"results":"49","hashOfConfig":"28"},{"size":1291,"mtime":1648485768719,"results":"50","hashOfConfig":"28"},{"size":1194,"mtime":1648033793522,"results":"51","hashOfConfig":"28"},{"size":2339,"mtime":1648485929822,"results":"52","hashOfConfig":"28"},{"size":1084,"mtime":1648033793528,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ah362o",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/index.js",[],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/App.js",["139","140"],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Reducer/reducer.js",[],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/NewDepartmentPage.js",["141"],["142","143"],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/EditEmployeePage.js",["144"],["145","146","147","148"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport employeesUtils from \"../Utils/employeesUtils\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Typography,\n  Grid,\n  TextField,\n  Button,\n  ButtonGroup,\n} from \"@mui/material\";\nimport EditEmployeeShiftTable from \"../Components/EditEmployeeShiftTable\";\nimport EditEmployeeSelect from \"../Components/EditEmployeeSelect\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport SendIcon from \"@mui/icons-material/Send\";\n\nconst EditEmployeePage = () => {\n  let token = sessionStorage[\"token\"];\n  const storeData = useSelector((state) => state);\n  const navigate = useNavigate();\n  const params = useParams();\n  const [employee, setEmployee] = useState({});\n  const [updated, setUpdated] = useState(false);\n  const [AllShifts, setAllShifts] = useState({});\n  const [allocateBTN, setAllocateBTN] = useState(false);\n  const [AllocateOptions, setAllocateOptions] = useState([]);\n  const [shift_id, setShift_id] = useState(\"\");\n\n  useEffect(async () => {\n    let all_db_data = storeData.db;\n    let employee = all_db_data.employees[params.id];\n    setEmployee(employee);\n    setAllShifts(all_db_data.shifts);\n\n    let Emp_Shift_ids;\n    let options = [];\n    if (all_db_data?.employees[params.id].hasOwnProperty(\"Shifts\")) {\n      Emp_Shift_ids = all_db_data.employees[params.id].Shifts.map((s) => s._id);\n\n      for (let i = 0; i < all_db_data.shifts.length; i++) {\n        if (!Emp_Shift_ids.includes(all_db_data.shifts[i]._id)) {\n          options.push(all_db_data.shifts[i]);\n        }\n      }\n    } else {\n      options = all_db_data.shifts;\n    }\n    setAllocateOptions(options);\n  }, []);\n\n  useEffect(async () => {\n    let resp = await axios.get(\"http://127.0.0.1:5000/getAllFactory\");\n    let all_db_data = resp.data;\n    let employee = all_db_data.employees[params.id];\n    setEmployee(employee);\n    setAllShifts(all_db_data.shifts);\n\n    let Emp_Shift_ids;\n    let options = [];\n    if (all_db_data.employees[params.id].hasOwnProperty(\"Shifts\")) {\n      Emp_Shift_ids = all_db_data.employees[params.id].Shifts.map((s) => s._id);\n\n      for (let i = 0; i < all_db_data.shifts.length; i++) {\n        if (!Emp_Shift_ids.includes(all_db_data.shifts[i]._id)) {\n          options.push(all_db_data.shifts[i]);\n        }\n      }\n    } else {\n      options = all_db_data.shifts;\n    }\n    setAllocateOptions(options);\n  }, [allocateBTN]);\n\n  const UpdateUserData = async () => {\n    console.log(employee);\n    await employeesUtils.update_employee(token, employee._id, employee);\n    setUpdated(!updated);\n  };\n\n  const DeleteUserData = async () => {\n    await employeesUtils.delete_employee(token, employee._id);\n    navigate(\"/mainPage/employeePage\");\n  };\n\n  const alocate_shift_to_emp = async () => {\n    await employeesUtils.add_shift_to_employee(token, employee._id, shift_id);\n    setAllocateBTN(!allocateBTN);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\" pb={2} color=\"primary.second\">\n        <b> Edit Employee Page</b>\n      </Typography>\n      <Grid>\n        <form>\n          <Typography>First name:</Typography>\n          <TextField\n            varient=\"outlined\"\n            required\n            fullWidth\n            value={employee.FirstName}\n            onChange={(e) =>\n              setEmployee({ ...employee, FirstName: e.target.value })\n            }\n          />\n          <Typography>Last name:</Typography>\n          <TextField\n            varient=\"outlined\"\n            required\n            fullWidth\n            value={employee.LastName}\n            onChange={(e) =>\n              setEmployee({ ...employee, LastName: e.target.value })\n            }\n          />\n          <Typography>Start work year:</Typography>\n          <TextField\n            varient=\"outlined\"\n            required\n            fullWidth\n            value={employee.StartWorkYear}\n            onChange={(e) =>\n              setEmployee({ ...employee, StartWorkYear: e.target.value })\n            }\n          />\n          <Typography>Department: </Typography>\n          {employee.hasOwnProperty(\"DepartmentId\") &&\n            employee.DepartmentId.map((item, index) => {\n              return (\n                <Button fullWidth key={index} variant=\"contained\">\n                  <Link\n                    to={\"/mainPage/editdepartmentPage/\" + item.Name}\n                    style={{\n                      color: \"white\",\n                      textDecoration: \"underline\",\n                    }}\n                  >\n                    {item.Name}\n                  </Link>\n                </Button>\n              );\n            })}\n          <Typography>Shifts: </Typography>\n          <EditEmployeeShiftTable employee={employee} />\n          <Typography>Select shift to allocate:</Typography>\n          <EditEmployeeSelect\n            AllocateOptions={AllocateOptions}\n            setShift_id={setShift_id}\n          />\n        </form>\n        <ButtonGroup fullWidth>\n          <Button\n            variant=\"contained\"\n            onClick={UpdateUserData}\n            endIcon={<SendIcon />}\n            sx={{ m: 1 }}\n          >\n            UPDATE\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={DeleteUserData}\n            startIcon={<DeleteIcon />}\n            sx={{ m: 1 }}\n          >\n            DELETE\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={alocate_shift_to_emp}\n            sx={{ m: 1 }}\n          >\n            Allocate\n          </Button>\n        </ButtonGroup>\n        <br />\n        <br />\n        {allocateBTN && <text>Allocated!</text>}\n        {updated && <text>Updated!</text>}\n      </Grid>\n    </div>\n  );\n};\n\nexport default EditEmployeePage;\n",["149","150"],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/LoginPage.js",[],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/EmployeePage.js",["151"],[],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Typography, Button } from \"@mui/material\";\nimport EmployeeSelect from \"../Components/EmployeeSelect\";\nimport EmployeeTable from \"../Components/EmployeeTable\";\n\nconst EmployeePage = () => {\n  const storeData = useSelector((state) => state);\n  const navigate = useNavigate();\n  const [filtered, setFiltered] = useState([]);\n  const [depChosenFilter, setDepChosenFilter] = useState(\"\");\n  const [check, setCheck] = useState(false);\n\n  useEffect(() => {\n    let arr = storeData.db.employees;\n    let newArr = [];\n    if (check === true) {\n      if (depChosenFilter !== \"Cancel\") {\n        arr.forEach((element) => {\n          if (element.hasOwnProperty(\"DepartmentId\")) {\n            element.DepartmentId.forEach((item) => {\n              if (item.Name === depChosenFilter) {\n                newArr.push(element);\n              }\n            });\n          }\n        });\n        setFiltered(newArr);\n      } else {\n        setFiltered(arr);\n      }\n    } else {\n      setFiltered(arr);\n    }\n  }, [depChosenFilter]);\n\n  return (\n    <div>\n      <Typography variant=\"h4\" pb={2} color=\"primary.second\">\n        <b> Employees Page</b>\n      </Typography>\n      <EmployeeSelect setDepChosen={setDepChosenFilter} setCheck={setCheck} />\n      <EmployeeTable\n        check={check}\n        filtered={filtered}\n        depChosen={depChosenFilter}\n      />\n      <Button\n        variant=\"contained\"\n        sx={{ my: 3 }}\n        onClick={() => navigate(\"/mainPage/newemployeePage\")}\n        fullWidth\n      >\n        Add new employee\n      </Button>\n    </div>\n  );\n};\n\nexport default EmployeePage;\n","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/DepartmentPage.js",[],["152","153"],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/NewEmployeePage.js",["154"],[],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport employeesUtils from \"../Utils/employeesUtils\";\nimport EmployeeSelectDep from \"../Components/EmployeeSelectDep\";\nimport { Typography, TextField, Button, Grid } from \"@mui/material\";\n\nconst NewEmployeePage = () => {\n  const storeData = useSelector((state) => state);\n  const navigate = useNavigate();\n  const token = sessionStorage[\"token\"];\n  const [db, setDb] = useState({});\n  const [hasError, setHasError] = useState(false);\n\n  const [employee, setEmployee] = useState({\n    FirstName: \"\",\n    LastName: \"\",\n    StartWorkYear: 0,\n    DepartmentId: [],\n  });\n\n  const [FirstNameError, setFirstNameError] = useState(false);\n  const [LastNameError, setLastNameError] = useState(false);\n  const [StartWorkYearError, setStartWorkYearError] = useState(false);\n  const [DepartmentIdError, setDepartmentIdError] = useState(false);\n\n  useEffect(() => {\n    async function fetchdata() {\n      setDb(storeData.db);\n    }\n    fetchdata();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setFirstNameError(false);\n    setLastNameError(false);\n    setStartWorkYearError(false);\n    setDepartmentIdError(false);\n    setHasError(false);\n\n    if (employee.FirstName === \"\") {\n      setFirstNameError(true);\n    } else {\n      setFirstNameError(false);\n    }\n\n    if (employee.LastName === \"\") {\n      setLastNameError(true);\n    } else {\n      setLastNameError(false);\n    }\n    if (employee.StartWorkYear === 0) {\n      setStartWorkYearError(true);\n    }\n    if (employee.DepartmentId.length === 0) {\n      setDepartmentIdError(false);\n      setHasError(true);\n    }\n    if (\n      employee.FirstName &&\n      employee.LastName &&\n      employee.StartWorkYear &&\n      employee.DepartmentId\n    ) {\n      console.log(\n        employee.FirstName,\n        employee.LastName,\n        employee.StartWorkYear,\n        employee.DepartmentId\n      );\n      await employeesUtils.add_new_employee(token, employee);\n      navigate(\"/mainPage/employeePage\");\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\">\n      <Typography variant=\"h4\" pb={2} color=\"primary.second\">\n        <b> New Employee Page</b>\n      </Typography>\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"First name\"\n          variant=\"outlined\"\n          required\n          fullWidth\n          error={FirstNameError}\n          onChange={(e) =>\n            setEmployee({ ...employee, FirstName: e.target.value })\n          }\n          sx={{ mb: 3 }}\n        />{\" \"}\n        <br />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Last name\"\n          variant=\"outlined\"\n          fullWidth\n          required\n          onChange={(e) =>\n            setEmployee({ ...employee, LastName: e.target.value })\n          }\n          sx={{ mb: 3 }}\n          error={LastNameError}\n        />{\" \"}\n        <br />\n        <TextField\n          id=\"standard-number\"\n          label=\"Start working year\"\n          type=\"number\"\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n          required\n          variant=\"outlined\"\n          onChange={(e) =>\n            setEmployee({ ...employee, StartWorkYear: e.target.value })\n          }\n          error={StartWorkYearError}\n          sx={{ mb: 3 }}\n        />\n        <br />\n        {hasError && <Typography color=\"error\">This is required!</Typography>}\n        <EmployeeSelectDep\n          deps={db}\n          setEmployee={setEmployee}\n          employee={employee}\n          error={DepartmentIdError}\n        />\n        <Button type=\"submit\" fullWidth sx={{ my: 3 }} variant=\"contained\">\n          Submit\n        </Button>\n      </form>\n    </Grid>\n  );\n};\n\nexport default NewEmployeePage;\n","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/MainPage.js",[],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/EditDepartmentPage.js",["155","156","157","158"],[],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport departmentUtils from \"../Utils/departmentUtils\";\nimport employeesUtils from \"../Utils/employeesUtils\";\nimport {\n  Typography,\n  Button,\n  TextField,\n  MenuItem,\n  Select,\n  FormControl,\n  InputLabel,\n  ButtonGroup,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport SendIcon from \"@mui/icons-material/Send\";\n\nconst EditDepartmentPage = () => {\n  const storeData = useSelector((state) => state);\n  let token = sessionStorage[\"token\"];\n  const params = useParams();\n  const [dep, setDep] = useState({});\n  const [emp, setEmp] = useState([]);\n  const [empNotInDep, setEmpNotInDep] = useState([]);\n  const [depNameError, setDepNameError] = useState(false);\n  const [e_id_toAdd, setE_id_toAdd] = useState(\"\");\n\n  useEffect(() => {\n    let all_db_data = storeData.db;\n\n    let d = all_db_data.departments.filter((x) => x.Name == params.dName);\n    if (d.length > 0) {\n      setDep(d[0]);\n    }\n\n    let e = all_db_data.employees;\n    setEmp(e);\n\n    let employeesNotInThisDep = [];\n\n    let A = e.map((x) => x.hasOwnProperty(\"DepartmentId\"));\n    for (let i = 0; i < A.length; i++) {\n      if (A[i] === true) {\n        for (let j = 0; j < e[i].DepartmentId.length; j++) {\n          if (e[i].DepartmentId[j].Name !== d[0].Name) {\n            employeesNotInThisDep.push(e[i]);\n          }\n        }\n      } else {\n        employeesNotInThisDep.push(e[i]);\n      }\n    }\n    setEmpNotInDep(employeesNotInThisDep);\n    console.log(employeesNotInThisDep);\n\n    console.log(e);\n    console.log(d[0]);\n  }, []);\n\n  const handleChange = (e) => {\n    setDep({ ...dep, Manager: e.target.value });\n  };\n  const handleChange2 = (e) => {\n    setE_id_toAdd(e.target.value);\n  };\n\n  const DeleteDep = async () => {\n    await departmentUtils.delete_department(dep._id, token);\n  };\n  const UpdateDep = async () => {\n    await departmentUtils.update_department(token, dep._id, dep);\n  };\n  const allocateEmp = async () => {\n    await employeesUtils.add_department_to_employee(token, e_id_toAdd, dep._id);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\" pb={2} color=\"primary.second\">\n        <b> Edit Department</b>\n      </Typography>\n      <TextField\n        type=\"text\"\n        id=\"outlined-basic\"\n        variant=\"outlined\"\n        fullWidth\n        label=\"Department name\"\n        value={dep.Name}\n        required\n        onChange={(e) => setDep({ ...dep, Name: e.target.value })}\n        sx={{ mb: 3 }}\n        error={depNameError}\n      />{\" \"}\n      <FormControl sx={{ width: \"100%\" }}>\n        <InputLabel id=\"demo-simple-select-label\">Choose Manager</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          label=\"Choose Manager\"\n          onChange={handleChange}\n          fullWidth\n        >\n          {emp?.map((item, index) => {\n            if (item._id == dep.Manager) {\n              return (\n                <MenuItem key={index} value={item._id} selected>\n                  {item.FirstName} {item.LastName}\n                </MenuItem>\n              );\n            } else {\n              return (\n                <MenuItem key={index} value={item._id}>\n                  {item.FirstName} {item.LastName}\n                </MenuItem>\n              );\n            }\n          })}\n        </Select>\n      </FormControl>\n      <br />\n      <InputLabel id=\"demo-simple-select-label\" sx={{ mt: 1 }}>\n        Allocate selected Employee\n      </InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        label=\"Choose Manager\"\n        onChange={handleChange2}\n        fullWidth\n      >\n        {empNotInDep.map((item, index) => {\n          return (\n            <MenuItem key={index} value={item._id}>\n              {item.FirstName} {item.LastName}\n            </MenuItem>\n          );\n        })}\n      </Select>\n      <ButtonGroup fullWidth>\n        <Button\n          variant=\"contained\"\n          onClick={UpdateDep}\n          endIcon={<SendIcon />}\n          sx={{ m: 1 }}\n        >\n          UPDATE\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={DeleteDep}\n          startIcon={<DeleteIcon />}\n          sx={{ m: 1 }}\n        >\n          DELETE\n        </Button>\n        <Button variant=\"contained\" onClick={allocateEmp} sx={{ m: 1 }}>\n          Allocate\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default EditDepartmentPage;\n","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/ShiftsPage.js",[],["159","160"],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Pages/UsersPage.js",[],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Utils/authUtils.js",["161"],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Utils/employeesUtils.js",["162"],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/EmployeeSelect.js",[],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/EmployeeSelectDep.js",["163","164"],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/DepTable.js",[],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/Shift.js",[],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/EditEmployeeSelect.js",[],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/EmployeeTable.js",["165"],[],"import * as React from \"react\";\nimport {\n  TableBody,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nexport default function EmployeeTable(props) {\n  const storeData = useSelector((state) => state);\n\n  return (\n    <TableContainer elevation={0} component={Paper}>\n      <Table border=\"1\" fullwidth>\n        <TableHead>\n          <TableRow\n            sx={{\n              backgroundColor: \"primary.dark\",\n              \"& th\": {\n                fontSize: \"1.25rem\",\n                color: \"#e3f2fd\",\n              },\n            }}\n            align=\"center\"\n          >\n            <TableCell align=\"center\">index</TableCell>\n            <TableCell align=\"center\">Name</TableCell>\n            <TableCell align=\"center\">Starting Date</TableCell>\n            <TableCell align=\"center\">Departments</TableCell>\n            <TableCell align=\"center\">Shifts</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody sx={{ align: \"center\" }}>\n          {props.check\n            ? props.filtered.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell align=\"center\">{index}</TableCell>\n                  <TableCell align=\"center\">\n                    <Link\n                      to={\"/mainPage/editemployeePage/\" + index}\n                      style={{ color: \"black\", textDecoration: \"underline\" }}\n                    >\n                      {\" \"}\n                      {item.FirstName} {item.LastName}\n                    </Link>\n                  </TableCell>\n                  <TableCell align=\"center\">{item.StartWorkYear}</TableCell>\n                  <TableCell align=\"center\">\n                    {item.hasOwnProperty(\"DepartmentId\") &&\n                      item.DepartmentId.map((item2, index2) => {\n                        return (\n                          <Link\n                            style={{\n                              color: \"black\",\n                              textDecoration: \"underline\",\n                            }}\n                            key={index2}\n                            to={\"/mainPage/editdepartmentPage/\" + item2.Name}\n                            style={{\n                              color: \"black\",\n                              textDecoration: \"underline\",\n                            }}\n                          >\n                            {item2.Name}\n                          </Link>\n                        );\n                      })}\n                  </TableCell>\n                  <TableCell align=\"auto\">\n                    <ul>\n                      {item.hasOwnProperty(\"Shifts\") &&\n                        item.Shifts.map((item1, index) => {\n                          return (\n                            <li key={index}>\n                              Date: {item1.Date} <br />\n                              Time: {item1.StartingHour} - {item1.EndingHour}\n                            </li>\n                          );\n                        })}\n                    </ul>\n                  </TableCell>\n                </TableRow>\n              ))\n            : storeData.db.employees.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell align=\"center\">{index}</TableCell>\n                  <TableCell align=\"center\">\n                    <Link\n                      to={\"/mainPage/editemployeePage/\" + index}\n                      style={{ color: \"black\", textDecoration: \"underline\" }}\n                    >\n                      {\" \"}\n                      {item.FirstName} {item.LastName}\n                    </Link>\n                  </TableCell>\n                  <TableCell align=\"center\">{item.StartWorkYear}</TableCell>\n                  <TableCell align=\"center\">\n                    {item.hasOwnProperty(\"DepartmentId\") &&\n                      item.DepartmentId.map((item2, index2) => {\n                        return (\n                          <Link\n                            key={index2}\n                            to={\"/mainPage/editdepartmentPage/\" + item2.Name}\n                            style={{\n                              color: \"black\",\n                              textDecoration: \"underline\",\n                            }}\n                          >\n                            {item2.Name}\n                          </Link>\n                        );\n                      })}\n                  </TableCell>\n                  <TableCell align=\"auto\">\n                    <ul>\n                      {item.hasOwnProperty(\"Shifts\") &&\n                        item.Shifts.map((item1, index) => {\n                          return (\n                            <li key={index}>\n                              Date: {item1.Date} <br />\n                              Time: {item1.StartingHour} - {item1.EndingHour}\n                            </li>\n                          );\n                        })}\n                    </ul>\n                  </TableCell>\n                </TableRow>\n              ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/UsersTable.js",[],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/EditEmployeeShiftTable.js",[],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Utils/departmentUtils.js",["166"],[],"/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Components/ShiftAllocate.js",["167","168","169"],[],"import { Button, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport employeesUtils from \"../Utils/employeesUtils\";\n\nconst ShiftAllocate = (props) => {\n  let token = sessionStorage[\"token\"];\n  const [empNotInThisShift, setEmpNotInThisShift] = useState([]);\n  const [selectedEmpToAdd, setSelectedEmpToAdd] = useState(\"\");\n\n  useEffect(() => {\n    let options = [];\n    let dontHaveShifts = props.employees.filter(\n      (x) => !x.hasOwnProperty(\"Shifts\")\n    );\n    dontHaveShifts.forEach((element) => {\n      options.push({\n        Name: element.FirstName + \" \" + element.LastName,\n        EmpId: element._id,\n      });\n    });\n\n    let haveShift = props.employees.filter((x) => x.hasOwnProperty(\"Shifts\"));\n    let a = haveShift.map((x) =>\n      x.Shifts.filter((y) => y._id == props.shift._id)\n    );\n\n    a.forEach((element) => {\n      if (element.length == 0) {\n        let obj = haveShift[a.indexOf(element)];\n        options.push({\n          Name: obj.FirstName + \" \" + obj.LastName,\n          EmpId: obj._id,\n        });\n      }\n    });\n    setEmpNotInThisShift(options);\n  }, []);\n\n  const handleChange = (e) => {\n    setSelectedEmpToAdd(e.target.value);\n    console.log(\"Employee Selected!!\");\n  };\n\n  const allocateEmp = async () => {\n    await employeesUtils.add_shift_to_employee(\n      token,\n      selectedEmpToAdd,\n      props.shift._id\n    );\n  };\n\n  return (\n    <div>\n      <Typography variant=\"body2\" mt={1} mb={1} color=\"primary\">\n        <b>\n          {\" \"}\n          Allocate Employees to <br /> shift ID: {props.shift._id} <br />\n          Date: {props.shift.Date} Time: {props.shift.StartingHour}-\n          {props.shift.EndingHour}\n        </b>\n      </Typography>\n\n      <select onChange={(e) => handleChange(e)} defaultValue=\"\">\n        <option value=\"\" selected disabled hidden>\n          Choose Employee\n        </option>\n        {empNotInThisShift.map((item, index) => {\n          return (\n            <option key={index} value={item.EmpId}>\n              {item.Name}\n            </option>\n          );\n        })}\n      </select>\n      <br />\n      <br />\n      <Button\n        fullWidth\n        sx={{ mb: 1 }}\n        variant=\"contained\"\n        onClick={allocateEmp}\n      >\n        ALLOCATE EMP TO SHIFT\n      </Button>\n    </div>\n  );\n};\n\nexport default ShiftAllocate;\n","/Users/arikmoz/Desktop/Bootcamp/Projects/my-factory-v1/client/src/Utils/shiftsUtils.js",["170"],[],{"ruleId":"171","severity":1,"message":"172","line":19,"column":13,"nodeType":"173","endLine":22,"endColumn":4},{"ruleId":"171","severity":1,"message":"174","line":22,"column":6,"nodeType":"175","endLine":22,"endColumn":8,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":22,"column":10,"nodeType":"179","messageId":"180","endLine":22,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":25,"column":13,"nodeType":"173","endLine":29,"endColumn":4,"suppressions":"181"},{"ruleId":"171","severity":1,"message":"182","line":29,"column":6,"nodeType":"175","endLine":29,"endColumn":8,"suggestions":"183","suppressions":"184"},{"ruleId":"177","severity":1,"message":"185","line":27,"column":10,"nodeType":"179","messageId":"180","endLine":27,"endColumn":19},{"ruleId":"171","severity":1,"message":"172","line":32,"column":13,"nodeType":"173","endLine":52,"endColumn":4,"suppressions":"186"},{"ruleId":"171","severity":1,"message":"187","line":52,"column":6,"nodeType":"175","endLine":52,"endColumn":8,"suggestions":"188","suppressions":"189"},{"ruleId":"171","severity":1,"message":"172","line":54,"column":13,"nodeType":"173","endLine":75,"endColumn":4,"suppressions":"190"},{"ruleId":"171","severity":1,"message":"191","line":75,"column":6,"nodeType":"175","endLine":75,"endColumn":19,"suggestions":"192","suppressions":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"171","severity":1,"message":"198","line":36,"column":6,"nodeType":"175","endLine":36,"endColumn":23,"suggestions":"199"},{"ruleId":"171","severity":1,"message":"172","line":44,"column":13,"nodeType":"173","endLine":50,"endColumn":4,"suppressions":"200"},{"ruleId":"171","severity":1,"message":"182","line":50,"column":6,"nodeType":"175","endLine":50,"endColumn":8,"suggestions":"201","suppressions":"202"},{"ruleId":"171","severity":1,"message":"182","line":33,"column":6,"nodeType":"175","endLine":33,"endColumn":8,"suggestions":"203"},{"ruleId":"177","severity":1,"message":"204","line":27,"column":24,"nodeType":"179","messageId":"180","endLine":27,"endColumn":39},{"ruleId":"205","severity":1,"message":"206","line":33,"column":58,"nodeType":"207","messageId":"208","endLine":33,"endColumn":60},{"ruleId":"171","severity":1,"message":"209","line":60,"column":6,"nodeType":"175","endLine":60,"endColumn":8,"suggestions":"210"},{"ruleId":"205","severity":1,"message":"206","line":106,"column":26,"nodeType":"207","messageId":"208","endLine":106,"endColumn":28},{"ruleId":"171","severity":1,"message":"172","line":39,"column":13,"nodeType":"173","endLine":42,"endColumn":4,"suppressions":"211"},{"ruleId":"171","severity":1,"message":"174","line":42,"column":6,"nodeType":"175","endLine":42,"endColumn":28,"suggestions":"212","suppressions":"213"},{"ruleId":"214","severity":1,"message":"215","line":17,"column":1,"nodeType":"216","endLine":17,"endColumn":45},{"ruleId":"214","severity":1,"message":"215","line":72,"column":1,"nodeType":"216","endLine":80,"endColumn":3},{"ruleId":"205","severity":1,"message":"217","line":9,"column":28,"nodeType":"207","messageId":"208","endLine":9,"endColumn":30},{"ruleId":"205","severity":1,"message":"206","line":14,"column":31,"nodeType":"207","messageId":"208","endLine":14,"endColumn":33},{"ruleId":"218","severity":1,"message":"219","line":65,"column":29,"nodeType":"220","messageId":"221","endLine":68,"endColumn":31},{"ruleId":"214","severity":1,"message":"215","line":38,"column":1,"nodeType":"216","endLine":44,"endColumn":3},{"ruleId":"205","severity":1,"message":"206","line":24,"column":36,"nodeType":"207","messageId":"208","endLine":24,"endColumn":38},{"ruleId":"205","severity":1,"message":"206","line":28,"column":26,"nodeType":"207","messageId":"208","endLine":28,"endColumn":28},{"ruleId":"171","severity":1,"message":"222","line":37,"column":6,"nodeType":"175","endLine":37,"endColumn":8,"suggestions":"223"},{"ruleId":"214","severity":1,"message":"215","line":38,"column":1,"nodeType":"216","endLine":44,"endColumn":3},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["224"],"no-unused-vars","'emps' is assigned a value but never used.","Identifier","unusedVar",["225"],"React Hook useEffect has a missing dependency: 'storeData.db'. Either include it or remove the dependency array.",["226"],["227"],"'AllShifts' is assigned a value but never used.",["228"],"React Hook useEffect has missing dependencies: 'params.id' and 'storeData.db'. Either include them or remove the dependency array.",["229"],["230"],["231"],"React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["232"],["233"],"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"React Hook useEffect has missing dependencies: 'check' and 'storeData.db.employees'. Either include them or remove the dependency array.",["236"],["237"],["238"],["239"],["240"],"'setDepNameError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'params.dName' and 'storeData.db'. Either include them or remove the dependency array.",["241"],["242"],["243"],["244"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","React Hook useEffect has missing dependencies: 'props.employees' and 'props.shift._id'. Either include them or remove the dependency array.",["245"],{"desc":"246","fix":"247"},{"kind":"248","justification":"249"},{"desc":"250","fix":"251"},{"kind":"248","justification":"249"},{"kind":"248","justification":"249"},{"desc":"252","fix":"253"},{"kind":"248","justification":"249"},{"kind":"248","justification":"249"},{"desc":"254","fix":"255"},{"kind":"248","justification":"249"},"no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"kind":"248","justification":"249"},{"desc":"250","fix":"258"},{"kind":"248","justification":"249"},{"desc":"250","fix":"259"},{"desc":"260","fix":"261"},{"kind":"248","justification":"249"},{"desc":"262","fix":"263"},{"kind":"248","justification":"249"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [dispatch]",{"range":"266","text":"267"},"directive","","Update the dependencies array to be: [storeData.db]",{"range":"268","text":"269"},"Update the dependencies array to be: [params.id, storeData.db]",{"range":"270","text":"271"},"Update the dependencies array to be: [allocateBTN, params.id]",{"range":"272","text":"273"},"Update the dependencies array to be: [check, depChosenFilter, storeData.db.employees]",{"range":"274","text":"275"},{"range":"276","text":"269"},{"range":"277","text":"269"},"Update the dependencies array to be: [params.dName, storeData.db]",{"range":"278","text":"279"},"Update the dependencies array to be: [added, allocateShift, dispatch]",{"range":"280","text":"281"},"Update the dependencies array to be: [props.employees, props.shift._id]",{"range":"282","text":"283"},[894,896],"[dispatch]",[835,837],"[storeData.db]",[1820,1822],"[params.id, storeData.db]",[2555,2568],"[allocateBTN, params.id]",[1144,1161],"[check, depChosenFilter, storeData.db.employees]",[1467,1469],[1104,1106],[1695,1697],"[params.dName, storeData.db]",[1488,1510],"[added, allocateShift, dispatch]",[1119,1121],"[props.employees, props.shift._id]"]